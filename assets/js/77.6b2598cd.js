(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{447:function(t,e,s){"use strict";s.r(e);var a=s(45),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"split"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[t._v("#")]),t._v(" Split")]),t._v(" "),s("h2",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),s("p",[t._v("The function is used to split text with given regular expression and return specific element.")]),t._v(" "),s("p",[s("strong",[t._v("Name:")]),t._v(" SPLIT")]),t._v(" "),s("p",[s("strong",[t._v("Input Series:")]),t._v(" Only support a single input series. The data type is TEXT.")]),t._v(" "),s("p",[s("strong",[t._v("Parameter:")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("regex")]),t._v(": The regular expression used to split the text.\nAll grammars supported by Java are acceptable, for example, "),s("code",[t._v("['\"]")]),t._v(" is expected to match "),s("code",[t._v("'")]),t._v(" and "),s("code",[t._v('"')]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("index")]),t._v(": The wanted index of elements in the split result.\nIt should be an integer no less than -1, default to -1 which means the length of the result array is returned\nand any non-negative integer is used to fetch the text of the specific index starting from 0.")])]),t._v(" "),s("p",[s("strong",[t._v("Output Series:")]),t._v(" Output a single series. The type is INT32 when "),s("code",[t._v("index")]),t._v(" is -1 and TEXT when it's an valid index.")]),t._v(" "),s("p",[s("strong",[t._v("Note:")]),t._v(" When "),s("code",[t._v("index")]),t._v(" is out of the range of the result array, for example "),s("code",[t._v("0,1,2")]),t._v(" split with "),s("code",[t._v(",")]),t._v(" and "),s("code",[t._v("index")]),t._v(" is set to 3,\nno result are returned for that record.")]),t._v(" "),s("h2",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),s("p",[t._v("Input series:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2021-01-01T00:00:01.000+08:00|      A,B,A+,B-|\n|2021-01-01T00:00:02.000+08:00|      A,A+,A,B+|\n|2021-01-01T00:00:03.000+08:00|         B+,B,B|\n|2021-01-01T00:00:04.000+08:00|      A+,A,A+,A|\n|2021-01-01T00:00:05.000+08:00|       A,B-,B,B|\n+-----------------------------+---------------+\n")])])]),s("p",[t._v("SQL for query:")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"regex"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d1\n")])])]),s("p",[t._v("Output series:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('+-----------------------------+-------------------------------------------------+\n|                         Time|split(root.test.d1.s1, "regex"=",", "index"="-1")|\n+-----------------------------+-------------------------------------------------+\n|2021-01-01T00:00:01.000+08:00|                                                4|\n|2021-01-01T00:00:02.000+08:00|                                                4|\n|2021-01-01T00:00:03.000+08:00|                                                3|\n|2021-01-01T00:00:04.000+08:00|                                                4|\n|2021-01-01T00:00:05.000+08:00|                                                4|\n+-----------------------------+-------------------------------------------------+\n')])])]),s("p",[t._v("Another SQL for query:")]),t._v(" "),s("p",[t._v("SQL for query:")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"regex"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d1\n")])])]),s("p",[t._v("Output series:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('+-----------------------------+------------------------------------------------+\n|                         Time|split(root.test.d1.s1, "regex"=",", "index"="3")|\n+-----------------------------+------------------------------------------------+\n|2021-01-01T00:00:01.000+08:00|                                              B-|\n|2021-01-01T00:00:02.000+08:00|                                              B+|\n|2021-01-01T00:00:04.000+08:00|                                               A|\n|2021-01-01T00:00:05.000+08:00|                                               B|\n+-----------------------------+------------------------------------------------+\n')])])])])}),[],!1,null,null,null);e.default=n.exports}}]);