(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{461:function(t,a,s){"use strict";s.r(a);var r=s(45),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"and-todo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#and-todo"}},[t._v("#")]),t._v(" AND(TODO)")]),t._v(" "),s("h2",{attrs:{id:"函数简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数简介"}},[t._v("#")]),t._v(" 函数简介")]),t._v(" "),s("p",[t._v("本函数用于查询时间序列中具有并行关系的模式匹配，并输出匹配的个数。")]),t._v(" "),s("p",[s("strong",[t._v("函数名：")]),t._v(" SEQ")]),t._v(" "),s("p",[s("strong",[t._v("输入序列：")]),t._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),t._v(" "),s("p",[s("strong",[t._v("参数：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("WITHIN")]),t._v("：匹配的时间序列的时间间隔的最大值。")]),t._v(" "),s("li",[s("code",[t._v("ATLEAST")]),t._v("：匹配的时间序列的时间间隔的最小值。")])]),t._v(" "),s("p",[s("strong",[t._v("输出序列：")]),t._v(" 输出匹配的个数，类型为INT32。")]),t._v(" "),s("h2",{attrs:{id:"使用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用示例"}},[t._v("#")]),t._v(" 使用示例")]),t._v(" "),s("p",[t._v("TODO")])])}),[],!1,null,null,null);a.default=v.exports}}]);