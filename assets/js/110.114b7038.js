(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{480:function(t,s,a){"use strict";a.r(s);var r=a(45),v=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"conv-todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conv-todo"}},[t._v("#")]),t._v(" Conv(TODO)")]),t._v(" "),a("h2",{attrs:{id:"函数简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数简介"}},[t._v("#")]),t._v(" 函数简介")]),t._v(" "),a("p",[t._v("本函数对两个输入序列进行卷积。")]),t._v(" "),a("p",[a("strong",[t._v("函数名：")]),t._v(" CONV")]),t._v(" "),a("p",[a("strong",[t._v("输入序列：")]),t._v(" 仅支持两个输入序列，类型均为 INT32 / INT64 / FLOAT / DOUBLE")]),t._v(" "),a("p",[a("strong",[t._v("输出序列：")]),t._v(" 输出单个序列，类型为DOUBLE，它是两个序列卷积的结果。序列的时间戳从0开始，仅用于表示顺序。")]),t._v(" "),a("p",[a("strong",[t._v("提示：")]),t._v(" 输入序列中的"),a("code",[t._v("NaN")]),t._v("将被忽略。")]),t._v(" "),a("h2",{attrs:{id:"使用示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用示例"}},[t._v("#")]),t._v(" 使用示例")])])}),[],!1,null,null,null);s.default=v.exports}}]);