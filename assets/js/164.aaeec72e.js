(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{534:function(t,s,a){"use strict";a.r(s);var e=a(45),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[t._v("#")]),t._v(" Split")]),t._v(" "),a("h2",{attrs:{id:"函数简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数简介"}},[t._v("#")]),t._v(" 函数简介")]),t._v(" "),a("p",[t._v("本函数用于使用给定的正则表达式切分文本，并返回指定的项。")]),t._v(" "),a("p",[a("strong",[t._v("函数名：")]),t._v(" SPLIT")]),t._v(" "),a("p",[a("strong",[t._v("输入序列：")]),t._v(" 仅支持单个输入序列，类型为 TEXT。")]),t._v(" "),a("p",[a("strong",[t._v("参数：")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("regex")]),t._v(": 用于分割文本的正则表达式，支持所有Java正则表达式语法，比如"),a("code",[t._v("['\"]")]),t._v("将会匹配任意的英文引号"),a("code",[t._v("'")]),t._v("和"),a("code",[t._v('"')]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("index")]),t._v(": 输出结果在切分后数组中的序号，需要是大于等于-1的整数，默认值为-1表示返回切分后数组的长度，其它非负整数即表示返回数组中对应位置的切分结果（数组的秩从0开始计数）。")])]),t._v(" "),a("p",[a("strong",[t._v("输出序列：")]),t._v(" 输出单个序列，在"),a("code",[t._v("index")]),t._v("为-1时输出数据类型为INT32，否则为TEXT。")]),t._v(" "),a("p",[a("strong",[t._v("提示：")]),t._v(" 如果"),a("code",[t._v("index")]),t._v("超出了切分后结果数组的秩范围，例如使用"),a("code",[t._v(",")]),t._v("切分"),a("code",[t._v("0,1,2")]),t._v("时输入"),a("code",[t._v("index")]),t._v("为3，则该数据点没有输出结果。")]),t._v(" "),a("h2",{attrs:{id:"使用示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用示例"}},[t._v("#")]),t._v(" 使用示例")]),t._v(" "),a("p",[t._v("输入序列：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2021-01-01T00:00:01.000+08:00|      A,B,A+,B-|\n|2021-01-01T00:00:02.000+08:00|      A,A+,A,B+|\n|2021-01-01T00:00:03.000+08:00|         B+,B,B|\n|2021-01-01T00:00:04.000+08:00|      A+,A,A+,A|\n|2021-01-01T00:00:05.000+08:00|       A,B-,B,B|\n+-----------------------------+---------------+\n")])])]),a("p",[t._v("用于查询的SQL语句：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"regex"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d1\n")])])]),a("p",[t._v("输出序列：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('+-----------------------------+-------------------------------------------------+\n|                         Time|split(root.test.d1.s1, "regex"=",", "index"="-1")|\n+-----------------------------+-------------------------------------------------+\n|2021-01-01T00:00:01.000+08:00|                                                4|\n|2021-01-01T00:00:02.000+08:00|                                                4|\n|2021-01-01T00:00:03.000+08:00|                                                3|\n|2021-01-01T00:00:04.000+08:00|                                                4|\n|2021-01-01T00:00:05.000+08:00|                                                4|\n+-----------------------------+-------------------------------------------------+\n')])])]),a("p",[t._v("另一个查询的SQL语句：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"regex"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d1\n")])])]),a("p",[t._v("输出序列：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('+-----------------------------+------------------------------------------------+\n|                         Time|split(root.test.d1.s1, "regex"=",", "index"="3")|\n+-----------------------------+------------------------------------------------+\n|2021-01-01T00:00:01.000+08:00|                                              B-|\n|2021-01-01T00:00:02.000+08:00|                                              B+|\n|2021-01-01T00:00:04.000+08:00|                                               A|\n|2021-01-01T00:00:05.000+08:00|                                               B|\n+-----------------------------+------------------------------------------------+\n')])])])])}),[],!1,null,null,null);s.default=n.exports}}]);