(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{366:function(t,e,s){"use strict";s.r(e);var a=s(45),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"tsclean-iotdb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tsclean-iotdb"}},[t._v("#")]),t._v(" TsClean-IoTDB")]),t._v(" "),s("p",[t._v("语言："),s("RouterLink",{attrs:{to:"/"}},[t._v("English")]),t._v(" | 中文")],1),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("TsClean数据质量系统由清华大学大数据系统软件国家工程实验室自行研发，是一款具有国际领先水平的软件。该系统着眼于数据质量，致力于为工业大数据的应用提供坚实基础。目前，该系统已经在多个工业场景中得到广泛应用，受到用户的一致好评。")]),t._v(" "),s("p",[t._v("本项目基于"),s("a",{attrs:{href:"https://github.com/apache/iotdb",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apache IoTDB"),s("OutboundLink")],1),t._v("的用户自定义函数(UDF)，实现了TsClean数据质量系统的一系列重要函数，包括时序数据的质量指标计算、数值填补、数值修复等。")]),t._v(" "),s("h2",{attrs:{id:"快速开始"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快速开始"}},[t._v("#")]),t._v(" 快速开始")]),t._v(" "),s("ol",[s("li",[t._v("将本项目及其依赖打包成jar包或直接"),s("a",{attrs:{href:"proguard-target/udf-tsclean-0.1.0-jar-with-dependencies.jar"}},[t._v("下载")])]),t._v(" "),s("li",[t._v("将jar包复制到IoTDB程序目录的"),s("code",[t._v("ext\\udf")]),t._v("目录下")]),t._v(" "),s("li",[t._v("在IoTDB中使用下面的SQL语句注册UDF")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" completeness "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" “cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("edu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("thu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dquality"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("udf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UDTFCompleteness”\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" consistency "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" “cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("edu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("thu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dquality"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("udf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UDTFConsistency”\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" timeliness "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" “cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("edu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("thu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dquality"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("udf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UDTFTimeliness”\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" validity "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" “cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("edu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("thu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dquality"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("udf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UDTFValidity”\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" previousfill "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" “cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("edu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("thu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dquality"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("udf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UDTFPreviousFill”\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" linearfill "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" “cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("edu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("thu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dquality"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("udf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UDTFLinearFill”\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" screenrepair "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" “cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("edu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("thu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dquality"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("udf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UDTFScreenRepair”\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" lsgreedyrepair "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" “cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("edu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("thu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dquality"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("udf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UDTFLsGreedyRepair”\n")])])]),t._v(" "),s("h2",{attrs:{id:"函数介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数介绍"}},[t._v("#")]),t._v(" 函数介绍")]),t._v(" "),s("h3",{attrs:{id:"时序数据质量指标函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时序数据质量指标函数"}},[t._v("#")]),t._v(" 时序数据质量指标函数")]),t._v(" "),s("p",[t._v("对于时序数据的质量，我们制定了完整性、一致性、时效性、有效性四个指标来进行衡量。计算各个指标的UDF如下表：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("函数名")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("输入序列类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("属性参数")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("输出序列类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("功能描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("COMPLETENESS")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("INT32 / INT64 / FLOAT / DOUBLE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("window")]),t._v("：每一个窗口包含的数据点数目，最后一个窗口的数据点数目可能会不足。缺省情况下，全部输入数据都属于同一个窗口。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("DOUBLE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将输入序列划分为若干个连续且不重叠的窗口，分别计算每一个窗口的完整性，并输出窗口第一个数据点的时间戳和窗口的完整性。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("CONSISTENCY")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("INT32 / INT64 / FLOAT / DOUBLE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("window")]),t._v("：每一个窗口包含的数据点数目，最后一个窗口的数据点数目可能会不足。缺省情况下，全部输入数据都属于同一个窗口。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("DOUBLE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将输入序列划分为若干个连续且不重叠的窗口，分别计算每一个窗口的一致性，并输出窗口第一个数据点的时间戳和窗口的一致性。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("TIMELINESS")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("INT32 / INT64 / FLOAT / DOUBLE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("window")]),t._v("：每一个窗口包含的数据点数目，最后一个窗口的数据点数目可能会不足。缺省情况下，全部输入数据都属于同一个窗口。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("DOUBLE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将输入序列划分为若干个连续且不重叠的窗口，分别计算每一个窗口的时效性，并输出窗口第一个数据点的时间戳和窗口的时效性。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("VALIDITY")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("INT32 / INT64 / FLOAT / DOUBLE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("window")]),t._v("：每一个窗口包含的数据点数目，最后一个窗口的数据点数目可能会不足。缺省情况下，全部输入数据都属于同一个窗口。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("DOUBLE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将输入序列划分为若干个连续且不重叠的窗口，分别计算每一个窗口的有效性，并输出窗口第一个数据点的时间戳和窗口的有效性。")])])])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("completeness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("consistency"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("timeliness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("validity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n")])])]),s("p",[t._v("结果：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+-----------------------------+---------------+-----------------------------+----------------------------+---------------------------+-------------------------+\n|                         Time|root.test.d1.s1|completeness(root.test.d1.s1)|consistency(root.test.d1.s1)|timeliness(root.test.d1.s1)|validity(root.test.d1.s1)|\n+-----------------------------+---------------+-----------------------------+----------------------------+---------------------------+-------------------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|                        0.875|          0.9333333333333333|         0.9333333333333333|       0.8833333333333333|\n|2020-01-01T00:00:03.000+08:00|          101.0|                         null|                        null|                       null|                     null|\n|2020-01-01T00:00:04.000+08:00|          102.0|                         null|                        null|                       null|                     null|\n|2020-01-01T00:00:06.000+08:00|          104.0|                         null|                        null|                       null|                     null|\n|2020-01-01T00:00:08.000+08:00|          126.0|                         null|                        null|                       null|                     null|\n|2020-01-01T00:00:10.000+08:00|          108.0|                         null|                        null|                       null|                     null|\n|2020-01-01T00:00:14.000+08:00|          112.0|                         null|                        null|                       null|                     null|\n|2020-01-01T00:00:15.000+08:00|          113.0|                         null|                        null|                       null|                     null|\n|2020-01-01T00:00:16.000+08:00|          114.0|                         null|                        null|                       null|                     null|\n|2020-01-01T00:00:18.000+08:00|          116.0|                         null|                        null|                       null|                     null|\n|2020-01-01T00:00:20.000+08:00|          118.0|                         null|                        null|                       null|                     null|\n|2020-01-01T00:00:22.000+08:00|          120.0|                         null|                        null|                       null|                     null|\n|2020-01-01T00:00:26.000+08:00|          124.0|                         null|                        null|                       null|                     null|\n|2020-01-01T00:00:28.000+08:00|          126.0|                         null|                        null|                       null|                     null|\n|2020-01-01T00:00:30.000+08:00|            NaN|                         null|                        null|                       null|                     null|\n+-----------------------------+---------------+-----------------------------+----------------------------+---------------------------+-------------------------+\nTotal line number = 15\nIt costs 0.212s\n")])])]),s("h3",{attrs:{id:"时序数据数值填补函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时序数据数值填补函数"}},[t._v("#")]),t._v(" 时序数据数值填补函数")]),t._v(" "),s("p",[t._v("对于时序数据，我们设计了一系列数值填补方法。各方法的UDF如下表：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("函数名")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("输入序列类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("属性参数")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("输出序列类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("功能描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("PREVIOUSFILL")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("FLOAT / DOUBLE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("beforeRange")]),t._v("：只有当前一个非"),s("code",[t._v("NaN")]),t._v("数据点与当前数据点的时间差不超过该值时才会进行填补，否则仍为"),s("code",[t._v("NaN")]),t._v("。在缺省情况下为无穷大。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("与输入序列的实际类型一致")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将输入序列中的"),s("code",[t._v("NaN")]),t._v("填补为前一个非"),s("code",[t._v("NaN")]),t._v("数据点的值，输出填补后的新序列。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("LINEARFILL")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("FLOAT / DOUBLE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("beforeRange")]),t._v("：只有当前一个非"),s("code",[t._v("NaN")]),t._v("数据点与当前数据点的时间差不超过该值时才会进行填补，否则仍为"),s("code",[t._v("NaN")]),t._v("。在缺省情况下为无穷大。"),s("br"),t._v(" "),s("code",[t._v("afterRange")]),t._v("：只有当后一个非"),s("code",[t._v("NaN")]),t._v("数据点与当前数据点的时间差不超过该值时才会进行填补，否则仍为"),s("code",[t._v("NaN")]),t._v("。在缺省情况下为无穷大。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("与输入序列的实际类型一致")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将输入序列中的"),s("code",[t._v("NaN")]),t._v("填补为前一个和后一个非"),s("code",[t._v("NaN")]),t._v("数据点线性插值的结果，输出填补后的新序列。")])])])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("previousfill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"beforeRange"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("linearfill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"beforeRange"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"afterRange"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n")])])]),s("p",[t._v("结果：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('+-----------------------------+---------------+---------------------------------------------------+----------------------------------------------------------------------+\n|                         Time|root.test.d1.s2|previousfill(root.test.d1.s2, "beforeRange"="1000")|linearfill(root.test.d1.s2, "beforeRange"="1000", "afterRange"="1000")|\n+-----------------------------+---------------+---------------------------------------------------+----------------------------------------------------------------------+\n|2020-01-01T00:00:00.000+08:00|            NaN|                                                NaN|                                                                   NaN|\n|2020-01-01T00:00:01.000+08:00|          120.0|                                              120.0|                                                                 120.0|\n|2020-01-01T00:00:02.000+08:00|          120.0|                                              120.0|                                                                 120.0|\n|2020-01-01T00:00:04.000+08:00|            NaN|                                                NaN|                                                                   NaN|\n|2020-01-01T00:00:05.000+08:00|          130.0|                                              130.0|                                                                 130.0|\n|2020-01-01T00:00:06.000+08:00|            NaN|                                              130.0|                                                                 135.0|\n|2020-01-01T00:00:07.000+08:00|          140.0|                                              140.0|                                                                 140.0|\n+-----------------------------+---------------+---------------------------------------------------+----------------------------------------------------------------------+\nTotal line number = 7\nIt costs 0.421s\n')])])]),s("h3",{attrs:{id:"时序数据数值修复函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时序数据数值修复函数"}},[t._v("#")]),t._v(" 时序数据数值修复函数")]),t._v(" "),s("p",[t._v("时序数据中可能存在一些数值异常点，我们设计了一系列数值修复方法对这些异常点进行修复。各方法的UDF如下表：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("函数名")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("输入序列类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("属性参数")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("输出序列类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("功能描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("SCREENREPAIR")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("INT32 / INT64 / FLOAT / DOUBLE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("minSpeed")]),t._v("：当速度小于该值时会被视作数值异常点加以修复。在缺省情况下为中位数减去三倍绝对中位差。"),s("br"),t._v(" "),s("code",[t._v("maxSpeed")]),t._v("：当速度大于该值时会被视作数值异常点加以修复。在缺省情况下为中位数加上三倍绝对中位差。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("与输入序列的实际类型一致")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("采用基于速度阈值的Screen方法对时间序列的数值进行修复，输出修复后的序列（"),s("code",[t._v("NaN")]),t._v("在修复之前会先进行线性插值填补）。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("LSGREEDYREPAIR")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("INT32 / INT64 / FLOAT / DOUBLE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("center")]),t._v("：对速度变化分布建立的高斯模型的中心。在缺省情况下为0。"),s("br"),t._v(" "),s("code",[t._v("sigma")]),t._v("：对速度变化分布建立的高斯模型的标准差。在缺省情况下为绝对中位差。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("与输入序列的实际类型一致")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("采用基于速度变化似然的LsGreedy方法对时间序列的数值进行修复，输出修复后的序列（"),s("code",[t._v("NaN")]),t._v("在修复之前会先进行线性插值填补）。")])])])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("screenrepair"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lsgreedyrepair"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n")])])]),s("p",[t._v("结果：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+-----------------------------+---------------+-----------------------------+-------------------------------+\n|                         Time|root.test.d1.s1|screenrepair(root.test.d1.s1)|lsgreedyrepair(root.test.d1.s1)|\n+-----------------------------+---------------+-----------------------------+-------------------------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|                        100.0|                          100.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|                        101.0|                          101.0|\n|2020-01-01T00:00:04.000+08:00|          102.0|                        102.0|                          102.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|                        104.0|                          104.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|                        106.0|                          106.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|                        108.0|                          108.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|                        112.0|                          112.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|                        113.0|                          113.0|\n|2020-01-01T00:00:16.000+08:00|          114.0|                        114.0|                          114.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|                        116.0|                          116.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|                        118.0|                          118.0|\n|2020-01-01T00:00:22.000+08:00|          120.0|                        120.0|                          120.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|                        124.0|                          124.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|                        126.0|                          126.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|                        128.0|                          128.0|\n+-----------------------------+---------------+-----------------------------+-------------------------------+\nTotal line number = 15\nIt costs 0.766s\n")])])]),s("h2",{attrs:{id:"函数实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数实现"}},[t._v("#")]),t._v(" 函数实现")]),t._v(" "),s("h3",{attrs:{id:"数据质量指标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据质量指标"}},[t._v("#")]),t._v(" 数据质量指标")]),t._v(" "),s("p",[t._v("对于时序数据的质量，我们制定了如下四个指标来进行衡量，每一个指标都包含了一个或多个异常：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("完整性")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("一致性")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("时效性")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("有效性")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("数据丢失异常")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("过密点")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("延迟点")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("取值范围")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("空值异常")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("取值变化范围")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("特殊值异常")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("速度范围")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("速度变化范围")])])])]),t._v(" "),s("p",[s("strong",[t._v("完整性")]),t._v("采用如下的公式计算：")]),t._v(" "),s("p",[t._v("Completeness = 1 - (N"),s("sub",[t._v("null")]),t._v(" + N"),s("sub",[t._v("special")]),t._v(" + N"),s("sub",[t._v("miss")]),t._v(") / (N + N"),s("sub",[t._v("miss")]),t._v(")")]),t._v(" "),s("p",[t._v("其中，N是时间序列总的数据点数目，N"),s("sub",[t._v("null")]),t._v("是时间序列中值为空的数据点数目，N"),s("sub",[t._v("special")]),t._v("是时间序列中值为特殊值的数据点数目，N"),s("sub",[t._v("miss")]),t._v("是时间序列中丢失的数据点数目。")]),t._v(" "),s("p",[s("strong",[t._v("一致性")]),t._v("采用如下的公式计算：")]),t._v(" "),s("p",[t._v("Consistency = 1 - N"),s("sub",[t._v("redundancy")]),t._v(" / N")]),t._v(" "),s("p",[t._v("其中，N是时间序列总的数据点数目，N"),s("sub",[t._v("redundancy")]),t._v("是时间序列中过密的数据点数目。")]),t._v(" "),s("p",[s("strong",[t._v("时效性")]),t._v("采用如下的公式计算：")]),t._v(" "),s("p",[t._v("Timeliness = 1 - N"),s("sub",[t._v("late")]),t._v(" / N")]),t._v(" "),s("p",[t._v("其中，N是时间序列总的数据点数目，N"),s("sub",[t._v("late")]),t._v("是时间序列中延迟的数据点数目。")]),t._v(" "),s("p",[s("strong",[t._v("有效性")]),t._v("采用如下的公式计算：")]),t._v(" "),s("p",[t._v("Validity = 1 - (N"),s("sub",[t._v("value")]),t._v(" + N"),s("sub",[t._v("variation")]),t._v(" + N"),s("sub",[t._v("speed")]),t._v(" + N"),s("sub",[t._v("speedchange")]),t._v(") / (4 * N)")]),t._v(" "),s("p",[t._v("其中，N是时间序列总的数据点数目，N"),s("sub",[t._v("value")]),t._v("是违反取值范围约束的数据点数目，N"),s("sub",[t._v("variation")]),t._v("是违反取值变化约束的数据点数目，N"),s("sub",[t._v("speed")]),t._v("是违反速度约束的数据点数目，N"),s("sub",[t._v("speedchange")]),t._v("是违反速度变化约束的数据点数目（同一个数据点可能违反多项约束）。")]),t._v(" "),s("p",[t._v("基于原始数据value和它的时间戳time，可以计算它的变化variation、速度speed以及速度变化speedchange：")]),t._v(" "),s("p",[t._v("variation"),s("sub",[t._v("i")]),t._v(" = value"),s("sub",[t._v("i+1")]),t._v(" - value"),s("sub",[t._v("i")])]),t._v(" "),s("p",[t._v("speed"),s("sub",[t._v("i")]),t._v(" = (value"),s("sub",[t._v("i+1")]),t._v(" - value"),s("sub",[t._v("i")]),t._v(") / (time"),s("sub",[t._v("i+1")]),t._v(" - time"),s("sub",[t._v("i")]),t._v(")")]),t._v(" "),s("p",[t._v("speedchange"),s("sub",[t._v("i")]),t._v(" = speed"),s("sub",[t._v("i+1")]),t._v(" - speed"),s("sub",[t._v("i")])]),t._v(" "),s("p",[t._v("对序列x，当x"),s("sub",[t._v("i")]),t._v("与其中位数的偏差超过了三倍绝对中位差（为了达到渐进正态性，乘上比例因子1.4826）时，称作违背约束，即")]),t._v(" "),s("p",[t._v("abs(x"),s("sub",[t._v("i")]),t._v(" - mid(x)) > 3 * mad(x)")]),t._v(" "),s("h3",{attrs:{id:"数据填补方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据填补方法"}},[t._v("#")]),t._v(" 数据填补方法")]),t._v(" "),s("p",[t._v("如果待填补的数据点的时间戳是t，前一个非"),s("code",[t._v("NaN")]),t._v("的数据点是(t"),s("sub",[t._v("1")]),t._v(",v"),s("sub",[t._v("1")]),t._v(")，后一个非"),s("code",[t._v("NaN")]),t._v("的数据点是(t"),s("sub",[t._v("2")]),t._v(",v"),s("sub",[t._v("2")]),t._v(")。那么，采用"),s("strong",[t._v("Previous")]),t._v("方法进行填补的结果为：")]),t._v(" "),s("p",[t._v("v = v"),s("sub",[t._v("1")])]),t._v(" "),s("p",[t._v("采用"),s("strong",[t._v("Linear")]),t._v("方法进行填补的结果为：")]),t._v(" "),s("p",[t._v("v = v"),s("sub",[t._v("1")]),t._v(" + (t - t"),s("sub",[t._v("1")]),t._v(") * (v"),s("sub",[t._v("2")]),t._v(" - v"),s("sub",[t._v("1")]),t._v(") / (t"),s("sub",[t._v("2")]),t._v(" - t"),s("sub",[t._v("1")]),t._v(")")]),t._v(" "),s("h3",{attrs:{id:"数据修复方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据修复方法"}},[t._v("#")]),t._v(" 数据修复方法")]),t._v(" "),s("p",[s("strong",[t._v("Screen")]),t._v("方法是一种基于速度阈值的修复方法。它的核心思想是，在修改尽可能少的数据点的前提下，使整个时间序列的速度都不超过阈值。由于考虑全局约束的算法复杂度过大，这里将约束放松到一个滑动窗口内，结合候选范围与中位原则确定合适的修复方案。具体算法参见"),s("a",{attrs:{href:"https://dl.acm.org/doi/10.1145/2723372.2723730",target:"_blank",rel:"noopener noreferrer"}},[t._v("SIGMOD'15-Screen"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("LsGreedy")]),t._v("方法是一种基于速度变化似然的修复方法。它的核心思想是，对速度变化分布进行建模，并找到使似然函数最大化的修复方案。一般地，模型可以被视作高斯模型。为了降低运算复杂度，这里采用贪心算法寻找较优的修复方案。减小速度变化与中心的偏移可以增大似然函数。利用大根堆维护序列的速度变化，找到与高斯分布中心偏移最大的，并对其进行调整，使其更加接近中心。当所有的速度变化与中心的偏移都小于3倍标准差时，贪心算法终止。具体算法参见"),s("a",{attrs:{href:"https://dl.acm.org/doi/10.1145/2882903.2915233",target:"_blank",rel:"noopener noreferrer"}},[t._v("SIGMOD'16-Sequential"),s("OutboundLink")],1),t._v("。")])])}),[],!1,null,null,null);e.default=n.exports}}]);