(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{437:function(t,a,s){"use strict";s.r(a);var r=s(45),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"lof-todo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lof-todo"}},[t._v("#")]),t._v(" LOF(TODO)")]),t._v(" "),s("h2",{attrs:{id:"函数简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数简介"}},[t._v("#")]),t._v(" 函数简介")]),t._v(" "),s("p",[t._v("本函数使用局部离群点检测方法用于查找序列的密度异常。将根据提供的第k距离数及局部离群点因子(lof)阈值，判断输入数据是否为离群点，即异常，并输出各点的判别结果。")]),t._v(" "),s("p",[s("strong",[t._v("函数名：")]),t._v(" LOF")]),t._v(" "),s("p",[s("strong",[t._v("输入序列：")]),t._v(" 多个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),t._v(" "),s("p",[s("strong",[t._v("参数：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("k")]),t._v(":使用第k距离计算局部离群点因子。")]),t._v(" "),s("li",[s("code",[t._v("threshold")]),t._v(":判断输入数据为局部离群点的局部离群点因子的下界，默认为1。局部离群点因子大于1表明其密度低于附近点，更可能为离群点。")])]),t._v(" "),s("p",[s("strong",[t._v("输出序列：")]),t._v(" 输出单个序列，类型为BOOLEAN。")]),t._v(" "),s("p",[s("strong",[t._v("提示：")]),t._v(" 不完整的数据行会被忽略，不参与计算，也不标记为离群点。")]),t._v(" "),s("h2",{attrs:{id:"使用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用示例"}},[t._v("#")]),t._v(" 使用示例")]),t._v(" "),s("h3",{attrs:{id:"指定第k距离数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定第k距离数"}},[t._v("#")]),t._v(" 指定第k距离数")]),t._v(" "),s("h3",{attrs:{id:"指定第k距离数与局部离群点因子阈值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定第k距离数与局部离群点因子阈值"}},[t._v("#")]),t._v(" 指定第k距离数与局部离群点因子阈值")])])}),[],!1,null,null,null);a.default=v.exports}}]);